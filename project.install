<?php

/**
 * Implement hook_install.
 */
function project_install() {
  require_once(dirname(__FILE__) . '/includes/project_node_type.inc');
  $t = get_t();

  /**
   * Set up project-specific field for project type.
   */
  $project_type = array(
    'entity_types' => array('node'),
    'type' => 'list_text',
    'field_name' => 'field_project_type',
    'label' => $t('Project type'),
    'settings' => array(
      'allowed_values' => array(
        'full' => $t('Full project'),
        'sandbox' => $t('Sandbox project'),
      ),
      'allowed_values_function' => '',
    ),
    'cardinality' => 1,
  );
  field_create_field($project_type);

  project_install_default_project_node_type();
}

/**
 * Implements hook_uninstall().
 */
function project_uninstall() {
  // TODO: should we delete these fields as part of uninstall, or not?
  // This kills the field and all of the field data.
  // Also, should we delete the project_node_type node type?
  require_once(dirname(__FILE__) . '/includes/project_node_type.inc');
  project_uninstall_default_project_node_type();
  field_delete_field('field_project_type');
  watchdog('project', 'Deleted the :field_name field from all content type instances.', array(':field_name' => 'field_project_type'));

  // Delete the project_behavior settings for all node types.
  foreach (node_type_get_types() as $type) {
    variable_del('project_behavior_' . $type->type);
  }
}

/**
 * Implements hook_schema().
 */
function project_schema() {
  return array(
    'project_maintainer' => array(
      'description' => t('Users who have various per-project maintainer permissions.'),
      'fields' => array(
        'nid' => array(
          'description' => t('Foreign key: node.nid of the project.'),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'uid' => array(
          'description' => t('Foreign key: {users}.uid of a user with any project maintainer permissions.'),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'update_project' => array(
          'description' => t('Can this user update(edit) the given project and modify its settings.'),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'administer_maintainers' => array(
          'description' => t('Can this user manipulate the maintainers for the given project.'),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('nid', 'uid'),
    ),
  );
}
